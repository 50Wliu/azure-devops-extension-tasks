name: '5.0.$(rev:r)'

trigger:
  batch: true
  branches:
    include:
    - main
    - feature/*

pr:
- main

pool:
  vmImage: 'windows-2022'

stages:
- stage: 'Build'
  displayName: 'Build'
  jobs:
  - job:
    displayName: 'Build on Windows'
    steps:
    - task: AzureCLI@2
      displayName: 'Fetch profile for Service Principal'
      inputs:
        azureSubscription: test
        scriptType: pscore
        scriptLocation: inlineScript
        inlineScript: |
          az rest -u https://app.vssps.visualstudio.com/_apis/profile/profiles/me --resource 499b84ac-1321-427f-aa17-267ca6975798

    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        npm run initdev
      displayName: 'Install Node dependencies'

    - powershell: |
        $vswhereLatest = "https://github.com/Microsoft/vswhere/releases/latest/download/vswhere.exe"
        $vswherePath = ".\BuildTasks\PublishVSExtension\v3\tools\vswhere.exe"
        remove-item $vswherePath -ErrorAction SilentlyContinue
        mkdir ".\BuildTasks\PublishVSExtension\v3\tools\" -force
        invoke-webrequest $vswhereLatest -OutFile $vswherePath
        test-path $vswherePath -PathType Leaf
      displayName: 'Grab the latest version of vswhere.exe for v3'

    - powershell: |
        $vswhereLatest = "https://github.com/Microsoft/vswhere/releases/latest/download/vswhere.exe"
        $vswherePath = ".\BuildTasks\PublishVSExtension\v4\tools\vswhere.exe"
        remove-item $vswherePath -ErrorAction SilentlyContinue
        mkdir ".\BuildTasks\PublishVSExtension\v4\tools\" -force
        invoke-webrequest $vswhereLatest -OutFile $vswherePath
        test-path $vswherePath -PathType Leaf
      displayName: 'Grab the latest version of vswhere.exe for v4'

    - powershell: |
        $vswhereLatest = "https://github.com/Microsoft/vswhere/releases/latest/download/vswhere.exe"
        $vswherePath = ".\BuildTasks\PublishVSExtension\v5\tools\vswhere.exe"
        remove-item $vswherePath -ErrorAction SilentlyContinue
        mkdir ".\BuildTasks\PublishVSExtension\v4\tools\" -force
        invoke-webrequest $vswhereLatest -OutFile $vswherePath
        test-path $vswherePath -PathType Leaf
      displayName: 'Grab the latest version of vswhere.exe for v5'

    - task: Npm@1
      displayName: 'Build the extension'
      inputs:
        command: custom
        verbose: false
        customCommand: 'run build'

    - task: TfxInstaller@5
      displayName: 'Use Node CLI for Azure DevOps'
      inputs:
        version: '0.x'
        checkLatest: true

    - task: PackageAzureDevOpsExtension@5
      displayName: 'Package Extension: $(Build.SourcesDirectory)'
      name: 'packageStep'
      inputs:
        rootFolder: '$(Build.SourcesDirectory)'
        outputPath: '$(Build.ArtifactStagingDirectory)\vs-marketplace-build-tasks.vsix'
        publisherId: 'winstonliu'
        extensionId: 'vs-marketplace-build-tasks'
        extensionTag: '-build'
        extensionName: 'Azure DevOps Extension Tasks'
        extensionVersion: '$(Build.BuildNumber)'
        updateTasksVersion: true
        updateTasksVersionType: patch
        extensionVisibility: private

    - task: PublishPipelineArtifact@1
      displayName: 'Publish vsix'
      inputs:
        publishLocation: pipeline
        targetPath: '$(packageStep.Extension.OutputPath)'
        artifact: 'vsix'
      condition: succeededOrFailed()

- stage: PublishDev
  displayName: 'Publish privately'
  condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
  dependsOn: 'Build'
  jobs:
    - deployment:
      environment: dev
      strategy:
        runOnce:
         deploy:
          steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '16.x'
            displayName: 'Install Node.js'

          - task: TfxInstaller@5
            displayName: 'Use Node CLI for Azure DevOps'
            inputs:
              version: '0.x'
              checkLatest: true

          - task: PublishAzureDevOpsExtension@5
            name: 'publishDev'
            inputs:
              connectTo: 'AzureRM'
              connectedServiceName: 'test'
              fileType: 'vsix'
              vsixFile: '$(Pipeline.Workspace)/vsix/vs-marketplace-tools-build-tasks.vsix'
              publisherId: 'ms-devlabs'
              extensionId: 'vs-marketplace-tools-build-tasks'
              # extensionTag: '-dev'
              updateTasksVersion: false
              extensionVisibility: 'private'
              shareWith: 'wliu1402'

          - task: IsAzureDevOpsExtensionValid@5
            inputs:
              connectTo: 'AzureRM'
              connectedServiceName: 'test'
              method: 'vsix'
              vsixFile: '$(publishDev.Extension.OutputPath)'

          - task: PublishPipelineArtifact@1
            displayName: 'Publish vsix'
            inputs:
              publishLocation: pipeline
              targetPath: '$(publishDev.Extension.OutputPath)'
              artifact: 'dev'
            condition: succeededOrFailed()
